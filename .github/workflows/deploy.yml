name: Deploy Airflow to GCP VM

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: de6-2ez

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Verify authentication
        run: |
          gcloud auth list
          gcloud config list project
          echo "‚úÖ Authentication successful"

      - name: Configure SSH key
        run: |
          echo "SSH key configuration completed"

      - name: Deploy to VM
        run: |
          # VM ÏÉÅÌÉú ÌôïÏù∏ Î∞è ÏãúÏûë
          gcloud compute instances describe de6-ez2-airflow \
            --zone=asia-northeast3-c \
            --project=de6-2ez \
            --format='get(status)' > vm_status.txt
          VM_STATUS=$(cat vm_status.txt)
          echo "VM Status: $VM_STATUS"
          if [ "$VM_STATUS" != "RUNNING" ]; then
            echo "Starting VM instance..."
            gcloud compute instances start de6-ez2-airflow \
              --zone=asia-northeast3-c \
              --project=de6-2ez
            for i in {1..12}; do
              STATUS=$(gcloud compute instances describe de6-ez2-airflow \
                --zone=asia-northeast3-c \
                --project=de6-2ez \
                --format='get(status)')
              if [ "$STATUS" = "RUNNING" ]; then
                echo "‚úÖ VM is now running"
                break
              fi
              echo "‚è≥ VM starting... ($i/12)"
              sleep 5
            done
          fi

          # SSHÎ°ú git pull Î∞è Docker Ïû¨ÏãúÏûë
          gcloud compute ssh elhanan@de6-ez2-airflow \
            --zone=asia-northeast3-c \
            --project=de6-2ez \
            --ssh-flag="-o StrictHostKeyChecking=no" \
            --command="
              set -e
              cd /home/elhanan/airflow
              git fetch origin
              git reset --hard origin/main
              docker compose down
              docker compose pull
              docker compose up -d
              for i in {1..6}; do
                if docker compose ps | grep -q 'Up'; then
                  echo '‚úÖ Containers are starting up'
                  break
                fi
                echo 'Waiting for containers... (\$i/6)'
                sleep 5
              done
            "

      - name: Health Check
        run: |
          VM_IP=$(gcloud compute instances describe de6-ez2-airflow \
            --zone=asia-northeast3-c \
            --project=de6-2ez \
            --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo "VM External IP: $VM_IP"
          for i in {1..18}; do
            if curl -f -s --connect-timeout 5 "http://$VM_IP:8080/health" > /dev/null 2>&1; then
              echo "‚úÖ Airflow webserver is healthy!"
              echo "üåê Airflow UI: http://$VM_IP:8080"
              exit 0
            else
              echo "‚è≥ Attempt $i/18: Airflow not ready yet, waiting 10s..."
              sleep 10
            fi
          done
          echo "‚ùå Health check failed - Airflow webserver not responding"
          gcloud compute ssh elhanan@de6-ez2-airflow \
            --zone=asia-northeast3-c \
            --project=de6-2ez \
            --ssh-flag="-o StrictHostKeyChecking=no" \
            --command="docker compose ps"
          exit 1

      - name: Cleanup on failure
        if: failure()
        run: |
          gcloud compute ssh elhanan@de6-ez2-airflow \
            --zone=asia-northeast3-c \
            --project=de6-2ez \
            --ssh-flag="-o StrictHostKeyChecking=no" \
            --command="
              echo '=== Docker Compose Status ==='
              docker compose ps
              echo '=== Airflow Webserver Logs ==='
              docker compose logs --tail=50 airflow-webserver
              echo '=== Airflow Scheduler Logs ==='
              docker compose logs --tail=50 airflow-scheduler
            " || true
