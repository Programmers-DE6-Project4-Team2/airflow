name: Deploy Airflow to GCP VM

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: de6-2ez

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Verify authentication
        run: |
          gcloud auth list
          gcloud config list project
          echo "✅ Authentication successful"

      - name: Configure SSH key
        run: |
          echo "SSH key configuration completed"

      - name: Deploy to VM
        run: |
          gcloud compute instances describe de6-ez2-airflow \
            --zone=asia-northeast3-c \
            --project=de6-2ez \
            --format='get(status)' > vm_status.txt

          VM_STATUS=$(cat vm_status.txt)
          echo "VM Status: $VM_STATUS"

          if [ "$VM_STATUS" != "RUNNING" ]; then
            echo "Starting VM instance..."
            gcloud compute instances start de6-ez2-airflow \
              --zone=asia-northeast3-c \
              --project=de6-2ez

            echo "Waiting for VM to be ready..."
            for i in {1..12}; do
              STATUS=$(gcloud compute instances describe de6-ez2-airflow \
                --zone=asia-northeast3-c \
                --project=de6-2ez \
                --format='get(status)')
              if [ "$STATUS" = "RUNNING" ]; then
                echo "✅ VM is now running"
                break
              fi
              echo "⏳ VM starting... ($i/12)"
              sleep 5
            done
          fi

          gcloud compute ssh airflow@de6-ez2-airflow \
            --zone=asia-northeast3-c \
            --project=de6-2ez \
            --ssh-flag="-o StrictHostKeyChecking=no" \
            --command="
              set -e
              echo '🚀 Starting deployment process...'
              cd /home/airflow/airflow || { echo 'Directory not found'; exit 1; }

              echo '🔑 Fixing file permissions...'
              sudo chown -R airflow:airflow . || true
              chmod -R u+w . || true

              echo '📦 Updating code from Git...'
              git fetch origin
              git reset --hard origin/main
          
              echo '🔧 Fixing permissions for Airflow containers...'
              sudo chown -R airflow:airflow logs/ || true
              sudo chown -R airflow:airflow dags/ || true
              sudo chown -R airflow:airflow plugins/ || true
              sudo chown -R airflow:airflow config/ || true
              sudo chown -R airflow:airflow dbt/ || true
              sudo chmod -R 755 logs/ || true
              sudo chmod -R 755 dbt/ || true

              echo '🔧 Fixing Docker container internal permissions...'
              docker exec -u root airflow-airflow-webserver-1 chown -R airflow:airflow /opt/airflow/dbt/beauty_elt/logs || true
              docker exec -u root airflow-airflow-webserver-1 chown -R airflow:airflow /opt/airflow/dbt/beauty_elt/target || true
              docker exec -u root airflow-airflow-scheduler-1 chown -R airflow:airflow /opt/airflow/dbt/beauty_elt/logs || true
              docker exec -u root airflow-airflow-scheduler-1 chown -R airflow:airflow /opt/airflow/dbt/beauty_elt/target || true
              docker exec -u root airflow-airflow-worker-1 chown -R airflow:airflow /opt/airflow/dbt/beauty_elt/logs || true
              docker exec -u root airflow-airflow-worker-1 chown -R airflow:airflow /opt/airflow/dbt/beauty_elt/target || true

              echo '✅ Deployment completed successfully'
            "
            
      - name: Health Check
        run: |
          VM_IP=$(gcloud compute instances describe de6-ez2-airflow \
            --zone=asia-northeast3-c \
            --project=de6-2ez \
            --format='get(networkInterfaces[0].accessConfigs[0].natIP)')

          echo "VM External IP: $VM_IP"
          echo "🔍 Checking Airflow webserver health..."

          for i in {1..10}; do
            if curl -f -s --connect-timeout 5 "http://$VM_IP:8080/health" > /dev/null 2>&1; then
              echo "✅ Airflow webserver is healthy!"
              echo "🎉 Deployment successful!"
              echo "🌐 Airflow UI: http://$VM_IP:8080"
              echo "👤 Default login: airflow / airflow"
              exit 0
            else
              echo "⏳ Attempt $i/10: Airflow not ready yet, waiting 10s..."
              sleep 10
            fi
          done

          echo "❌ Health check failed - Airflow webserver not responding"
          exit 1
