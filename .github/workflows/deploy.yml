name: Deploy Airflow to GCP VM

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: de6-2ez
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        
      - name: Verify authentication
        run: |
          gcloud auth list
          gcloud config list project
          echo "✅ Authentication successful"
          
      - name: Configure SSH key
        run: |
          # SSH 키 설정 (GCP 메타데이터에서 관리되는 경우 생략 가능)
          echo "SSH key configuration completed"
          
      - name: Deploy to VM
        run: |
          # VM 인스턴스가 실행 중인지 확인
          gcloud compute instances describe airflow-vm \
            --zone=asia-northeast3-a \
            --project=de6-2ez \
            --format='get(status)' > vm_status.txt
          
          VM_STATUS=$(cat vm_status.txt)
          echo "VM Status: $VM_STATUS"
          
          if [ "$VM_STATUS" != "RUNNING" ]; then
            echo "Starting VM instance..."
            gcloud compute instances start airflow-vm \
              --zone=asia-northeast3-a \
              --project=de6-2ez
            
            # VM 시작 확인 (polling)
            echo "Waiting for VM to be ready..."
            for i in {1..12}; do
              STATUS=$(gcloud compute instances describe airflow-vm \
                --zone=asia-northeast3-a \
                --project=de6-2ez \
                --format='get(status)')
              if [ "$STATUS" = "RUNNING" ]; then
                echo "✅ VM is now running"
                break
              fi
              echo "⏳ VM starting... ($i/12)"
              sleep 5
            done
          fi
          
          # SSH로 VM에 접속하여 배포 실행
          gcloud compute ssh ubuntu@airflow-vm \
            --zone=asia-northeast3-a \
            --project=de6-2ez \
            --ssh-flag="-o StrictHostKeyChecking=no" \
            --command="
              set -e
              echo '🚀 Starting deployment process...'
              
              # 작업 디렉토리로 이동
              cd /opt/airflow || { echo 'Directory /opt/airflow not found'; exit 1; }
              
              # Git 저장소 업데이트
              echo '📦 Updating code from Git...'
              git fetch origin
              git reset --hard origin/main
              
              # Docker Compose 서비스 재시작
              echo '🔄 Restarting Docker services...'
              docker-compose down
              docker-compose pull
              
              # 환경 변수 설정 (필요한 경우)
              export AIRFLOW_UID=\$(id -u)
              export AIRFLOW_GID=0
              
              # 서비스 시작
              docker-compose up -d
              
              # 컨테이너 시작 확인
              echo '⏳ Waiting for containers to start...'
              for i in {1..6}; do
                if docker-compose ps | grep -q 'Up'; then
                  echo '✅ Containers are starting up'
                  break
                fi
                echo 'Waiting for containers... (\$i/6)'
                sleep 5
              done
              
              echo '✅ Docker services started successfully'
            "
            
      - name: Health Check
        run: |
          # VM의 외부 IP 주소 가져오기
          VM_IP=$(gcloud compute instances describe airflow-vm \
            --zone=asia-northeast3-a \
            --project=de6-2ez \
            --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          
          echo "VM External IP: $VM_IP"
          
          # Airflow 웹서버 헬스체크 (더 빠른 간격으로)
          echo "🔍 Checking Airflow webserver health..."
          
          # 최대 3분간 헬스체크 (10초 간격)
          for i in {1..18}; do
            if curl -f -s --connect-timeout 5 "http://$VM_IP:8080/health" > /dev/null 2>&1; then
              echo "✅ Airflow webserver is healthy!"
              echo "🎉 Deployment successful!"
              echo "🌐 Airflow UI: http://$VM_IP:8080"
              echo "👤 Default login: airflow / airflow"
              exit 0
            else
              echo "⏳ Attempt $i/18: Airflow not ready yet, waiting 10s..."
              sleep 10
            fi
          done
          
          echo "❌ Health check failed - Airflow webserver not responding"
          echo "🔍 Checking container status..."
          
          # 컨테이너 상태 확인
          gcloud compute ssh ubuntu@airflow-vm \
            --zone=asia-northeast3-a \
            --project=de6-2ez \
            --ssh-flag="-o StrictHostKeyChecking=no" \
            --command="docker-compose ps"
          
          exit 1
          
      - name: Cleanup on failure
        if: failure()
        run: |
          echo "🧹 Deployment failed, checking logs..."
          
          # 실패 시 로그 확인
          gcloud compute ssh ubuntu@airflow-vm \
            --zone=asia-northeast3-a \
            --project=de6-2ez \
            --ssh-flag="-o StrictHostKeyChecking=no" \
            --command="
              echo '=== Docker Compose Status ==='
              docker-compose ps
              
              echo '=== Airflow Webserver Logs ==='
              docker-compose logs --tail=50 airflow-webserver
              
              echo '=== Airflow Scheduler Logs ==='
              docker-compose logs --tail=50 airflow-scheduler
            " || true
